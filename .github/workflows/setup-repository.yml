name: Setup Repository Settings

on:
  workflow_dispatch:
    inputs:
      update_branch_protection:
        description: 'Update branch protection rules'
        required: false
        default: true
        type: boolean
      update_collaborators:
        description: 'Update collaborator permissions'
        required: false
        default: true
        type: boolean

jobs:
  setup_repository:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup GitHub CLI
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.20.0'
    
    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install -y gh
      
    - name: Login to GitHub
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      
    - name: Set up branch protection for main
      if: ${{ github.event.inputs.update_branch_protection == 'true' }}
      run: |
        # First enable branch protection with basic settings
        gh api repos/dndnordic/origin/branches/main/protection \
          --method PUT \
          -f required_status_checks='{"strict":true,"contexts":["security-scan"]}' \
          -f enforce_admins=true \
          -f required_pull_request_reviews='{"dismissal_restrictions":{"users":["mikkihugo"],"teams":[]},"dismiss_stale_reviews":true,"require_code_owner_reviews":true,"required_approving_review_count":1,"bypass_pull_request_allowances":{"users":["mikkihugo"]}}' \
          -f restrictions='{"users":["mikkihugo"],"teams":[],"apps":[]}' \
          -f required_linear_history=true \
          -f allow_force_pushes=false \
          -f allow_deletions=false \
          -f required_conversation_resolution=true
        
        echo "Branch protection enabled for main branch"
      
    - name: Update collaborator permissions
      if: ${{ github.event.inputs.update_collaborators == 'true' }}
      run: |
        # Check if dnd-origin exists
        if gh api users/dnd-origin &> /dev/null; then
          echo "Setting dnd-origin permission to read-only on Origin repository"
          gh api repos/dndnordic/origin/collaborators/dnd-origin --method PUT -f permission=read
        else
          echo "User dnd-origin does not exist yet. Please create it first."
        fi
        
        # Check if dnd-singularity exists
        if gh api users/dnd-singularity &> /dev/null; then
          echo "Removing dnd-singularity from Origin repository"
          gh api repos/dndnordic/origin/collaborators/dnd-singularity --method DELETE || true
        else
          echo "User dnd-singularity does not exist yet."
        fi
        
        # Ensure mikkihugo has admin permissions
        gh api repos/dndnordic/origin/collaborators/mikkihugo --method PUT -f permission=admin
        
    - name: Create user setup instructions
      run: |
        cat > USER_SETUP_INSTRUCTIONS.md << 'EOL'
        # User Setup Instructions
        
        To properly set up the governance system, create these GitHub accounts:
        
        ## dnd-origin
        
        This account represents the Origin governance system. It needs:
        - Write access to singularity repository
        - Write access to genesis repository
        - Read access to origin repository (can propose but never approve changes to itself)
        
        ## dnd-singularity
        
        This account represents the Singularity system. It needs:
        - Write access to its own repository
        - No access to origin repository
        
        ## Steps to create these accounts
        
        1. Create both GitHub accounts with unique email addresses
        2. Add them to the dndnordic organization
        3. Configure repository permissions:
           - origin repository: dnd-origin = Read
           - singularity repository: dnd-origin = Write, dnd-singularity = Write
           - genesis repository: dnd-origin = Write
        
        After creating the accounts, run this workflow again with both options enabled.
        EOL
        
        echo "Created user setup instructions file"