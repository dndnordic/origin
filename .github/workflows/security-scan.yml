name: Security Scan

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Scan
    runs-on: [self-hosted, Linux, Docker, X64, builder]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python and dependencies
        run: |
          # Install Python 3.10 if not already installed
          if ! command -v python3.10 &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository -y ppa:deadsnakes/ppa
            sudo apt-get update
            sudo apt-get install -y python3.10 python3.10-venv python3.10-dev python3-pip
          fi
          
          # Create symlinks if needed
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 || true
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1 || true
          
          # Install pip packages
          python3 -m pip install --upgrade pip
          python3 -m pip install bandit safety
          python3 -m pip install -r requirements.txt

      - name: Run Bandit (SAST)
        run: |
          bandit -r ./src -f json -o bandit-results.json
          echo "Bandit scan complete"
      
      - name: Check for secrets 
        run: |
          # Simple scan for potential hardcoded secrets using grep
          ! grep -r --include="*.py" --include="*.yml" --include="*.yaml" -E "(password|secret|token|key).*=.*['\"].*['\"]" ./src
          echo "Secrets scan complete"
      
      - name: Dependency vulnerability scan
        run: |
          safety check --full-report
          echo "Dependency scan complete"
          
      - name: Generate security report
        run: |
          echo "## Security Scan Results" > security-report.md
          echo "" >> security-report.md
          
          echo "### SAST Results" >> security-report.md
          echo "" >> security-report.md
          echo "\`\`\`" >> security-report.md
          jq -r '.results | length' bandit-results.json | xargs -I {} echo "Total issues found: {}" >> security-report.md
          echo "\`\`\`" >> security-report.md
          
          echo "### Dependency Check" >> security-report.md
          echo "" >> security-report.md
          echo "\`\`\`" >> security-report.md
          safety check --output text >> security-report.md || true
          echo "\`\`\`" >> security-report.md
      
      - name: Post results as comment
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cat security-report.md
          
          # Only comment on the PR if we're running on a PR
          if [ ! -z "$PR_NUMBER" ]; then
            gh pr comment $PR_NUMBER --body-file security-report.md
          fi